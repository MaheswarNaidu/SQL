show databases;
use  23rd;
select * from employees;
select * from departments;

-- Inner Join
-- 1. List all employees and their department names, but only include employees assigned to a department.
select name, department_name from employees e inner join departments d on e.department_id = d.department_id;

-- 2. Find employees whose department name starts with the letter 'F'.
select name, department_name from employees e inner join departments d on e.department_id = d.department_id where department_name like "F%";

-- 3. Retrieve employee details along with the department name for departments with IDs greater than 102.
select emp_id, name, e.department_id, department_name from employees e inner join departments d on e.department_id = d.department_id where e.department_id>102;

-- 4. Find employees working in the 'IT' or 'Marketing' departments.
select emp_id, name, e.department_id, department_name from employees e inner join departments d on e.department_id = d.department_id where d.department_name in ( "It" , "Marketing");

-- 5. List department names and the total number of employees in each department. (Hint: Use GROUP BY with INNER JOIN)
select d.department_name , count(e.emp_id) as total_number
from employees e 
inner join departments d 
on e.department_id = d.department_id
group by d.department_id;


-- LEFT OUTER JOIN Questions
-- 6. List all employees, including those without a department, and their department details.
select emp_id, name, e.department_id, department_name
from employees e 
left join departments d 
on e.department_id = d.department_id;

-- 7. Find employees not assigned to any department.
select emp_id, name, e.department_id, department_name
from employees e 
left join departments d 
on e.department_id = d.department_id where department_name is null;

-- 8. Fetch all employees and their departments, replacing missing department names with 'Not Assigned'.
select emp_id, name, e.department_id,
case
 when department_name is null then "Not Assigned"
 else department_name
 end as department_names
from employees e 
left join departments d 
on e.department_id = d.department_id ;

-- 9. List employees along with department details for those working in departments with IDs less than 104.
select emp_id, name, e.department_id, department_name
from employees e 
left join departments d 
on e.department_id = d.department_id where e.department_id < 104;

-- 10. Find employees with names starting with 'V' and their corresponding departments (if available).
select emp_id, name , department_name
from employees e
left join departments d
on e.department_id = d.department_id
where name like "V%";


-- RIGHT OUTER JOIN Questions
-- 11. List all departments and their employee details, including departments with no employees.
select emp_id, name, department_name
from employees e
right join departments d
on e.department_id =  d.department_id;

-- 12. Find departments without any employees assigned to them.
select department_name , d.department_id
from employees e
right join departments d
on e.department_id =  d.department_id where name is null;

-- 13. Fetch the names of all departments along with employee names, where department names contain the letter 'O'.
select department_name , d.department_id
from employees e
right join departments d
on e.department_id =  d.department_id where department_name like "%o%";

-- 14. Retrieve department details along with employees whose names end with 'a'.
select department_name , d.department_id, emp_id, name 
from employees e
left join departments d
on e.department_id =  d.department_id where name like "%a";

-- 15. List all departments with fewer than two employees.
select department_name , d.department_id , count(name) 
from employees e
left join departments d
on e.department_id =  d.department_id 
group by d.department_id having count(name) < 2;

-- FULL OUTER JOIN Questions
-- 16. List all employees and departments, ensuring no record is missed.
select emp_id, name, e.department_id, department_name
from employees e
left join departments d
on e.department_id = d.department_id
union
select emp_id, name, e.department_id, department_name
from employees e
right join departments d
on e.department_id = d.department_id;

-- 17. Find all departments and employees where there is no match between the two tables.
select emp_id, name, e.department_id, department_name
from employees e
left join departments d
on e.department_id = d.department_id where e.department_id is null
union
select emp_id, name, e.department_id, department_name
from employees e
right join departments d
on e.department_id = d.department_id where name is null;

-- 18. Fetch details of all employees and departments, showing 'No Department' for missing department details and 'No Employee' for missing employee details.
select emp_id, name, d.department_id,
case
	when department_name is null then "No Department"
    else department_name
end as department_name
from employees e
left join departments d
on e.department_id = d.department_id where e.department_id
union
select emp_id, 
case
	when name is null then "No Employee"
    else name
end as name , d.department_id, department_name
from employees e
right join departments d
on e.department_id = d.department_id ;

-- 19. List employees and departments, ensuring departments with names ending in 's' are included even if no employees are assigned.
select emp_id, name, d.department_id, department_name
from employees e
left join departments d
on e.department_id = d.department_id 
union 
select emp_id, name, d.department_id, department_name
from employees e
right join departments d
on e.department_id = d.department_id where department_name like "%s";

-- 20. Find departments and employees where department_id does not match, showing mismatched rows explicitly.
select emp_id, name, d.department_id , department_name 
from employees e
left join departments d
on e.department_id = d.department_id where d.department_id is null
union
select emp_id, name, d.department_id , department_name 
from employees e
 join departments d
on e.department_id = d.department_id where emp_id is null;

--  Bonus Questions for Advanced Scenarios
-- 21. Combine INNER JOIN with aggregate functions to find the average number of employees per department.
select avg(emp_count) as average_emp_per_dept
from
(
select department_name , count(emp_id) as emp_count
from employees e
inner join departments d
on e.department_id = d.department_id
group by department_name
) as emp;

-- 22. Use LEFT OUTER JOIN to identify which employees are not assigned to a department and suggest a default department ('General').
select emp_id, name, 
case
	when department_name is null then "General"
    else department_name
end as 
department_name, e.department_id
from employees e
left join departments d
on e.department_id = d.department_id;

-- 23. Fetch employees assigned to the 'HR' department or employees with no department assigned.
select emp_id, name, department_name, e.department_id
from employees e
left join departments d
on e.department_id = d.department_id
where department_name like "HR" or department_name is null;

-- 24. Find all departments along with the employee count, even if the department has zero employees.
select d.department_id , department_name, count(emp_id) as employees_count
from employees e
right join departments d
on e.department_id = d.department_id
group by d.department_id, department_name;

-- 25. List employees and their departments for employees whose emp_id is even, using any join.
select emp_id, name, department_name, e.department_id
from employees e
join departments d
on e.department_id = d.department_id
where emp_id%2 = 0;


